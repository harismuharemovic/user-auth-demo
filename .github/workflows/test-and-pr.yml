name: Run Tests and Create PR

on:
  push:
    branches:
      - 'claude/issue-*'

permissions:
  contents: write
  issues: write
  pull-requests: write

jobs:
  test-and-create-pr:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.ref }}

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm ci

      - name: Extract issue number from branch
        id: extract
        run: |
          BRANCH_NAME="${{ github.ref_name }}"
          # Extract issue number from branch name: claude/issue-10-20251008-1040
          ISSUE_NUMBER=$(echo "$BRANCH_NAME" | grep -oE 'issue-([0-9]+)' | grep -oE '[0-9]+')
          echo "issue_number=$ISSUE_NUMBER" >> $GITHUB_OUTPUT
          echo "Extracted issue number: $ISSUE_NUMBER"

      - name: Find test files
        id: find_tests
        run: |
          # Find new or modified test files
          TEST_FILES=$(git diff --name-only origin/main...HEAD | grep -E '\.(test|spec)\.(ts|tsx|js|jsx)$' || echo "")
          
          if [ -z "$TEST_FILES" ]; then
            echo "No test files found in this branch"
            echo "has_tests=false" >> $GITHUB_OUTPUT
          else
            echo "Found test files:"
            echo "$TEST_FILES"
            echo "has_tests=true" >> $GITHUB_OUTPUT
            # Save to file for later use
            echo "$TEST_FILES" > /tmp/test_files.txt
          fi

      - name: Run tests
        id: run_tests
        if: steps.find_tests.outputs.has_tests == 'true'
        run: |
          echo "=== Running Tests ==="
          
          # Run all tests and capture output
          if npm test 2>&1 | tee /tmp/test_output.txt; then
            echo "tests_passed=true" >> $GITHUB_OUTPUT
            echo "✅ All tests passed!"
          else
            echo "tests_passed=false" >> $GITHUB_OUTPUT
            echo "❌ Tests failed"
            exit 1
          fi

      - name: Comment on issue - Tests Passed
        if: steps.run_tests.outputs.tests_passed == 'true'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          ISSUE_NUM="${{ steps.extract.outputs.issue_number }}"
          TEST_FILES=$(cat /tmp/test_files.txt)
          
          gh issue comment "$ISSUE_NUM" --body "### ✅ Tests Passed!
          
          All tests are passing. Creating pull request...
          
          **Test files:**
          \`\`\`
          $TEST_FILES
          \`\`\`
          
          **Branch:** \`${{ github.ref_name }}\`"

      - name: Create Pull Request
        if: steps.run_tests.outputs.tests_passed == 'true'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          ISSUE_NUM="${{ steps.extract.outputs.issue_number }}"
          
          # Get issue title for PR title
          ISSUE_TITLE=$(gh issue view "$ISSUE_NUM" --json title --jq '.title')
          
          # Get Jira key from issue body
          JIRA_KEY=$(gh issue view "$ISSUE_NUM" --json body --jq '.body' | grep -oE 'KAN-[0-9]+' | head -1 || echo "")
          
          # Create PR body
          cat > /tmp/pr_body.md << EOF
          ## 🤖 AI-Generated LLTC Tests - DO-178C Compliance Required
          
          ### 📋 Traceability
          - **GitHub Issue:** #${ISSUE_NUM}
          - **Jira Ticket:** ${JIRA_KEY}
          - **Jira URL:** https://haris-muharemovic.atlassian.net/browse/${JIRA_KEY}
          
          ### ✅ Automated Validation
          - [x] Tests generated by Claude Code
          - [x] All tests passing
          - [x] Branch created: \`${{ github.ref_name }}\`
          - [x] Ready for human review
          
          ### 📊 Test Results
          All tests passed successfully. See workflow run for details.
          
          ### 🔍 Manual Review Required
          This PR requires human review per DO-178C requirements:
          - [ ] Review test coverage (statement + branch)
          - [ ] Verify test quality and assertions
          - [ ] Check for edge cases and error handling
          - [ ] Ensure DO-178C traceability
          - [ ] Validate against requirements
          
          ### 📝 DO-178C Checklist
          A detailed 31-point review checklist will be posted automatically.
          
          ---
          **⚠️ Important:** This PR contains AI-generated tests and must NOT be auto-merged.
          Human review and approval is required before merging.
          
          *Generated by automated test workflow*
          EOF
          
          # Create PR to to-be-reviewed-tests branch
          gh pr create \
            --title "${ISSUE_TITLE}" \
            --body-file /tmp/pr_body.md \
            --base to-be-reviewed-tests \
            --head "${{ github.ref_name }}" \
            --label "ai-generated" \
            --label "lltc" \
            --label "requires-review"
          
          echo "✅ Pull request created!"

      - name: Comment on issue - Tests Failed  
        if: failure() && steps.find_tests.outputs.has_tests == 'true'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          ISSUE_NUM="${{ steps.extract.outputs.issue_number }}"
          
          # Get test output
          TEST_OUTPUT=$(cat /tmp/test_output.txt | tail -50 || echo "Test output not available")
          
          gh issue comment "$ISSUE_NUM" --body "### ❌ Tests Failed
          
          The generated tests are failing and need to be fixed before a PR can be created.
          
          **Branch:** \`${{ github.ref_name }}\`
          
          **Test Output:**
          \`\`\`
          $TEST_OUTPUT
          \`\`\`
          
          **Next Steps:**
          1. Review the test failures above
          2. Fix the tests or the implementation
          3. Push updated changes to this branch
          4. Tests will run automatically again
          
          **Note:** No PR will be created until all tests pass."

      - name: Comment on issue - No Tests Found
        if: steps.find_tests.outputs.has_tests == 'false'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          ISSUE_NUM="${{ steps.extract.outputs.issue_number }}"
          
          gh issue comment "$ISSUE_NUM" --body "### ⚠️ No Test Files Found
          
          No test files were found in this branch. This might indicate:
          - Tests weren't generated
          - Test files are in an unexpected location
          - This isn't a test generation issue
          
          **Branch:** \`${{ github.ref_name }}\`
          
          Please review the branch contents and ensure test files are present."

